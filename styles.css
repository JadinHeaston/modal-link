:root {
	--modal-link-dialog-background-color: #FFFFFF;
	--modal-link-dialog-backdrop-color: rgb(0 0 0 / 33%);
}

@media (prefers-color-scheme: dark) {
	:root {
		--modal-link-dialog-background-color: #000000;
		--modal-link-dialog-backdrop-color: rgb(0 0 0 / 33%);
	}
}

/*   Closed state of the dialog   */
#modal-link-dialog {
	box-sizing: border-box;
	background-color: var(--modal-link-dialog-background-color);
	border: none;
	/* opacity: 0;
	transform: scaleY(0); */
	width: 100%;
	height: 100%;
	padding: 2rem;
	/* transition:
		opacity 0.7s ease-out,
		transform 0.7s ease-out,
		overlay 0.7s ease-out allow-discrete,
		display 0.7s ease-out allow-discrete; */
	overflow: hidden;
}


/*   Open state of the dialog  */
#modal-link-dialog[open] {
	opacity: 1;
	transform: scaleY(1);
}

#modal-link-dialog-close {
	cursor: pointer;
	position: fixed;
	top: 0;
	right: 0;
	font-size: 1.25rem;
}

#modal-link-dialog-close:focus {
	outline: 1px auto;
}

#modal-link-dialog-iframe {
	border: .1rem solid black;
	width: 100%;
	height: 100%;
}


/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
/* @starting-style {
	#modal-link-dialog[open] {
		opacity: 0;
		transform: scaleY(0);
	}
} */

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
#modal-link-dialog::backdrop {
	background-color: transparent;
	/* transition:
		display 0.7s allow-discrete,
		overlay 0.7s allow-discrete,
		background-color 0.7s; */
	/* Equivalent to
		transition: all 0.7s allow-discrete; */
}

#modal-link-dialog[open]::backdrop {
	background-color: var(--modal-link-dialog-backdrop-color);
}

/* This starting-style rule cannot be nested inside the above selector
	  because the nesting selector cannot represent pseudo-elements. */

/* @starting-style {
	#modal-link-dialog[open]::backdrop {
		background-color: transparent;
	}
} */